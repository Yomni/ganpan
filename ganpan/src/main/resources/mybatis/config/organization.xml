<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper

PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"

"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- MyBatis에서 namespace는 필수적으로 명시해야 함 -->
<mapper namespace="organization">

	<resultMap id="organizationRM" type="organizationVO">
		<result property="workerMemberVO.nickName" column="worker_nickname" />
		<result property="signBoardVO.bossMemberVO.nickName" column="boss_nickname" />
		<result property="signBoardVO.signBoardName" column="sign_board_name" />
	</resultMap>
	
   <resultMap id="signBoardRM" type="signBoardVO">
      <result property="signBoardName" column="sign_board_name"/>
      <result property="bossMemberVO.nickName" column="boss_nickname"/>
      <result property="creationDate" column="creation_date"/>
   </resultMap>

	<select id="getOrganizationSignBoardList" parameterType="string"
		resultMap="organizationRM">
		select boss_nickname, sign_board_name
		from organization
		where worker_nickname = #{value}
	</select>
	
	<select id="getJoinedSignBoardCount" parameterType="string" resultType="int">
		select count(*)
		from organization
		where worker_nickname=#{value}
	</select>

	<select id="getOrganizationList" resultMap="organizationRM"
		parameterType="signBoardVO">
		select boss_nickname, worker_nickname, sign_board_name
		from organization
		where
		sign_board_name=#{signBoardName} and
		boss_nickname=#{bossMemberVO.nickName}
	</select>

	<select id="getOrganizationListPaging" resultMap="organizationRM" parameterType="map">
		SELECT boss_nickname, worker_nickname, sign_board_name
		FROM (SELECT row_number() over(order by sign_board_name desc) as rnum,boss_nickname, worker_nickname, sign_board_name
		 		 FROM organization
		 		 WHERE sign_board_name=#{signBoardName} and boss_nickname=#{bossNickName})
		WHERE rnum between #{getStartRowNumber} and #{getEndRowNumber}
	</select>

	<select id="getNickNameByEmail" resultType="String">
		SELECT nickname
		FROM member
		WHERE e_mail=#{value}
	</select>

	<delete id="deleteWorker" parameterType="organizationVO">
		delete from organization
		where worker_nickname=#{workerMemberVO.nickName}
	</delete>

	<insert id="registerBossNickName" parameterType="map">
		insert into
		organization(worker_nickname, boss_nickname, sign_board_name)
		values(#{bossNickName}, #{bossNickName}, #{signBoardName})
	</insert>

	<select id="sendInvitationList" resultType="Map" parameterType="signBoardVO">
		SELECT im.nickname as nickName, m.e_mail as eMail, im.invitation_date
		as invitationDate
		FROM member m, invitation_management im
		WHERE
		m.nickname=im.nickname and boss_nickname=#{bossMemberVO.nickName} and
		sign_board_name=#{signBoardName}
	</select>

	<delete id="leaveOrganization" parameterType="organizationVO">
		DELETE organization
		WHERE worker_nickname=#{workerMemberVO.nickName} and
		sign_board_name=#{signBoardVO.signBoardName} and
		boss_nickname=#{signBoardVO.bossMemberVO.nickName}
	</delete>

	<select id="groupCheck" parameterType="organizationVO" resultType="int">
		SELECT count(*)
		FROM organization
		WHERE boss_nickname = #{signBoardVO.bossMemberVO.nickName} and sign_board_name = #{signBoardVO.signBoardName} and worker_nickname = #{workerMemberVO.nickName}
	</select>

	<select id="workerSignBoardNameCheck" parameterType="organizationVO" resultType="int">
		SELECT count(*)
		FROM organization
		WHERE boss_nickname = #{workerMemberVO.nickName} and sign_board_name = #{signBoardVO.signBoardName} and worker_nickname = #{workerMemberVO.nickName}
	</select>

	<select id="inviteCheck" parameterType="organizationVO" resultType="int">
		SELECT count(*) 
		FROM invitation_management
		WHERE boss_nickname = #{signBoardVO.bossMemberVO.nickName} and sign_board_name = #{signBoardVO.signBoardName} and nickname = #{workerMemberVO.nickName}
	</select>
	
	<select id="getTotalJoinMemberCount" parameterType="signBoardVO" resultType="int">
		SELECT count(*) 
		FROM organization
		WHERE boss_nickname = #{bossMemberVO.nickName} and sign_board_name = #{signBoardName}
	</select>
</mapper>







